package com.anuncios.apirest.controllers;

import java.util.List;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.HttpStatus;
import org.springframework.web.bind.annotation.CrossOrigin;
import org.springframework.web.bind.annotation.DeleteMapping;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.PutMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.ResponseStatus;
import org.springframework.web.bind.annotation.RestController;

import com.anuncios.apirest.models.entity.Anuncio;
import com.anuncios.apirest.models.services.IAnuncioService;

// Este va a ser nuestro API REST

@CrossOrigin(origins = {"http://localhost:4200"}) // Aquí deberemos establecer restricciones sobre qué métodos se pueden utilizar mediante el parámetro 'methods'
@RestController
@RequestMapping("/api")
public class AnuncioRestController {

	@Autowired
	private IAnuncioService anuncioService; // Cuando se declara un Bean cion su tipo genérico ya sea interfaz o clase abstracta, va a buscar
											// el primer candidato. Una clase concreta que implemente esta interface y la va a inyectar.
											// Si tuviera más de una hay que usar un cualificador (qualifiying)
	@GetMapping("/anuncios")
	public List<Anuncio> index() {
		return anuncioService.findAll();
	}
	
	// Muestra un anuncio concreto
	@GetMapping("/anuncios/{id}")
	@ResponseStatus(code = HttpStatus.OK)
	public Anuncio show(@PathVariable Long id) {
		return anuncioService.findById(id);
	}
	
	@PostMapping("/anuncios")
	@ResponseStatus(code = HttpStatus.CREATED)
	public Anuncio create(@RequestBody Anuncio anuncio) {
//		anuncio.setCreateAt(new Date());  // La fecha la vamos a indicar en el modelo(entidad)
		return anuncioService.save(anuncio);
	}
	
	@PutMapping("/anuncios/{id}")
	@ResponseStatus(code = HttpStatus.CREATED)
	public Anuncio update(@RequestBody Anuncio anuncio, @PathVariable Long id) {
		Anuncio anuncioActual = anuncioService.findById(id);
		anuncioActual.setTitulo(anuncio.getTitulo());
		anuncioActual.setHistoria(anuncio.getHistoria());
		return anuncioService.save(anuncioActual);
	}
	
	@DeleteMapping("/anuncios/{id}")
	@ResponseStatus(code = HttpStatus.NO_CONTENT)
	public void delete(@PathVariable Long id) {
		anuncioService.delete(id);
	}
}